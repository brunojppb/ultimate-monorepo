name: Release packages

on:
  push:
    branches:
      - main

jobs:
  release-check:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          file-name: ./packages/core/package.json
          token: ${{ secrets.GITHUB_TOKEN }}

  # Only release if package bump happened
  release-packages:
    runs-on: ubuntu-latest
    needs: release-check
    if: needs.release-check.outputs.changed == 'true'
    steps:
      - name: git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: npm token
        run: echo //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }} > .npmrc

      - name: Release packages
        run: pnpm release
